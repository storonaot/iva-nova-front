{"ast":null,"code":"var _jsxFileName = \"/Users/irinazigalova/projects/iva-nova-front/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, show.name))))));\n\nIndex.getInitialProps = async function () {\n  const defaultOptions = {\n    url: \"\",\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    body: null\n  };\n  const header = new Headers({\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"multipart/form-data\"\n  });\n  const sentData = {\n    method: defaultOptions.method,\n    mode: \"cors\",\n    header\n  };\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\", sentData);\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/irinazigalova/projects/iva-nova-front/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","defaultOptions","url","method","mode","headers","body","header","Headers","sentData","res","data","json","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF,CADF;;AAeAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,cAAc,GAAG;AACrBC,IAAAA,GAAG,EAAE,EADgB;AAErBC,IAAAA,MAAM,EAAE,KAFa;AAGrBC,IAAAA,IAAI,EAAE,MAHe;AAIrBC,IAAAA,OAAO,EAAE;AACP,qCAA+B;AADxB,KAJY;AAOrBC,IAAAA,IAAI,EAAE;AAPe,GAAvB;AASA,QAAMC,MAAM,GAAG,IAAIC,OAAJ,CAAY;AACzB,mCAA+B,GADN;AAEzB,oBAAgB;AAFS,GAAZ,CAAf;AAKA,QAAMC,QAAQ,GAAG;AACfN,IAAAA,MAAM,EAAEF,cAAc,CAACE,MADR;AAEfC,IAAAA,IAAI,EAAE,MAFS;AAGfG,IAAAA;AAHe,GAAjB;AAKA,QAAMG,GAAG,GAAG,MAAMlB,KAAK,CACrB,8CADqB,EAErBiB,QAFqB,CAAvB;AAIA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLpB,IAAAA,KAAK,EAAEgB,IAAI,CAACf,GAAL,CAASoB,KAAK,IAAIA,KAAK,CAACnB,IAAxB;AADF,GAAP;AAGD,CA/BD;;AAiCA,eAAeJ,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const defaultOptions = {\n    url: \"\",\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    body: null\n  };\n  const header = new Headers({\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"multipart/form-data\"\n  });\n\n  const sentData = {\n    method: defaultOptions.method,\n    mode: \"cors\",\n    header\n  };\n  const res = await fetch(\n    \"https://api.tvmaze.com/search/shows?q=batman\",\n    sentData\n  );\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}