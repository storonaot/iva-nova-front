{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/irinazigalova/projects/iva-nova-front/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var defaultOptions, header, sentData, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          defaultOptions = {\n            url: \"\",\n            method: \"GET\",\n            mode: \"cors\",\n            headers: {\n              \"Access-Control-Allow-Origin\": \"*\"\n            },\n            body: null\n          };\n          header = new Headers({\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"multipart/form-data\"\n          });\n          sentData = {\n            method: defaultOptions.method,\n            mode: \"cors\",\n            header: header\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\", sentData));\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/irinazigalova/projects/iva-nova-front/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","defaultOptions","url","method","mode","headers","body","header","Headers","sentData","res","json","data","console","log","length","entry"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADiB;AAAA,CAAnB;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,cADgB,GACC;AACrBC,YAAAA,GAAG,EAAE,EADgB;AAErBC,YAAAA,MAAM,EAAE,KAFa;AAGrBC,YAAAA,IAAI,EAAE,MAHe;AAIrBC,YAAAA,OAAO,EAAE;AACP,6CAA+B;AADxB,aAJY;AAOrBC,YAAAA,IAAI,EAAE;AAPe,WADD;AAUhBC,UAAAA,MAVgB,GAUP,IAAIC,OAAJ,CAAY;AACzB,2CAA+B,GADN;AAEzB,4BAAgB;AAFS,WAAZ,CAVO;AAehBC,UAAAA,QAfgB,GAeL;AACfN,YAAAA,MAAM,EAAEF,cAAc,CAACE,MADR;AAEfC,YAAAA,IAAI,EAAE,MAFS;AAGfG,YAAAA,MAAM,EAANA;AAHe,WAfK;AAAA;AAAA,2CAoBJf,KAAK,CACrB,8CADqB,EAErBiB,QAFqB,CApBD;;AAAA;AAoBhBC,UAAAA,GApBgB;AAAA;AAAA,2CAwBHA,GAAG,CAACC,IAAJ,EAxBG;;AAAA;AAwBhBC,UAAAA,IAxBgB;AA0BtBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AA1BsB,2CA4Bf;AACLpB,YAAAA,KAAK,EAAEiB,IAAI,CAAChB,GAAL,CAAS,UAAAoB,KAAK;AAAA,qBAAIA,KAAK,CAACnB,IAAV;AAAA,aAAd;AADF,WA5Be;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiCA,eAAeJ,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const defaultOptions = {\n    url: \"\",\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    body: null\n  };\n  const header = new Headers({\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"multipart/form-data\"\n  });\n\n  const sentData = {\n    method: defaultOptions.method,\n    mode: \"cors\",\n    header\n  };\n  const res = await fetch(\n    \"https://api.tvmaze.com/search/shows?q=batman\",\n    sentData\n  );\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}